// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main Movable changes toValue when snackbar is visible 1`] = `
<Component
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Styled(Component)>
    <FlatList
      ListEmptyComponent={[Function]}
      contentContainerStyle={
        Array [
          Object {
            "flexGrow": 1,
          },
          null,
        ]
      }
      data={
        Array [
          Object {
            "id": "259162c6-8c55-446b-aa4f-cf9a6fcffc2f",
            "questions": Array [
              Object {
                "answer": "A library for managing user interfaces",
                "question": "What is React?",
              },
            ],
            "title": "React",
          },
        ]
      }
      disableVirtualization={false}
      extraData={false}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      renderItem={[Function]}
      scrollEventThrottle={50}
      updateCellsBatchingPeriod={50}
      windowSize={21}
    />
    <Styled(Component)
      bottom={16}
      right={16}
    >
      <withTheme(Movable)
        toValue={0}
      >
        <withTheme(FAB)
          handlePress={[Function]}
        />
      </withTheme(Movable)>
    </Styled(Component)>
    <ConfirmDialog
      actionCancelText="cancel"
      actionSubmitText="Delete"
      content="This deck and all it cards will be deleted. You can edit this deck if you want to change something."
      handleDismiss={[Function]}
      handleSubmitPress={[Function]}
      title="Delete deck?"
      visible={false}
    />
    <Connect(SettingsDialog)
      onDismiss={[Function]}
      visible={false}
    />
  </Styled(Component)>
  <Toaster
    onDismissCallback={[Function]}
  />
</Component>
`;

exports[`Main renderItem When there is a deck to be removed fades the deck 1`] = `
<Fadable
  fade={true}
  onAnimationEnd={[Function]}
>
  <Deck
    flashcardsCount={0}
    handleDeletePress={[Function]}
    handleEditPress={[Function]}
    onPress={[Function]}
    title="foo"
  />
</Fadable>
`;

exports[`Main renderItem renders correctly 1`] = `
<Fadable
  fade={false}
  onAnimationEnd={[Function]}
>
  <Deck
    flashcardsCount={0}
    handleDeletePress={[Function]}
    handleEditPress={[Function]}
    onPress={[Function]}
    title="foo"
  />
</Fadable>
`;

exports[`Main renders properly 1`] = `
<Component
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Styled(Component)>
    <FlatList
      ListEmptyComponent={[Function]}
      contentContainerStyle={
        Array [
          Object {
            "flexGrow": 1,
          },
          null,
        ]
      }
      data={
        Array [
          Object {
            "id": "259162c6-8c55-446b-aa4f-cf9a6fcffc2f",
            "questions": Array [
              Object {
                "answer": "A library for managing user interfaces",
                "question": "What is React?",
              },
            ],
            "title": "React",
          },
        ]
      }
      disableVirtualization={false}
      extraData={false}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      renderItem={[Function]}
      scrollEventThrottle={50}
      updateCellsBatchingPeriod={50}
      windowSize={21}
    />
    <Styled(Component)
      bottom={16}
      right={16}
    >
      <withTheme(Movable)
        toValue={0}
      >
        <withTheme(FAB)
          handlePress={[Function]}
        />
      </withTheme(Movable)>
    </Styled(Component)>
    <ConfirmDialog
      actionCancelText="cancel"
      actionSubmitText="Delete"
      content="This deck and all it cards will be deleted. You can edit this deck if you want to change something."
      handleDismiss={[Function]}
      handleSubmitPress={[Function]}
      title="Delete deck?"
      visible={false}
    />
    <Connect(SettingsDialog)
      onDismiss={[Function]}
      visible={false}
    />
  </Styled(Component)>
  <Toaster
    onDismissCallback={[Function]}
  />
</Component>
`;

exports[`Main renders properly when there are not any decks 1`] = `
<Component
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Styled(Component)>
    <FlatList
      ListEmptyComponent={[Function]}
      contentContainerStyle={
        Array [
          Object {
            "flexGrow": 1,
          },
          Object {
            "justifyContent": "center",
          },
        ]
      }
      data={Array []}
      disableVirtualization={false}
      extraData={false}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      renderItem={[Function]}
      scrollEventThrottle={50}
      updateCellsBatchingPeriod={50}
      windowSize={21}
    />
    <Styled(Component)
      bottom={16}
      right={16}
    >
      <withTheme(Movable)
        toValue={0}
      >
        <withTheme(FAB)
          handlePress={[Function]}
        />
      </withTheme(Movable)>
    </Styled(Component)>
    <ConfirmDialog
      actionCancelText="cancel"
      actionSubmitText="Delete"
      content="This deck and all it cards will be deleted. You can edit this deck if you want to change something."
      handleDismiss={[Function]}
      handleSubmitPress={[Function]}
      title="Delete deck?"
      visible={false}
    />
    <Connect(SettingsDialog)
      onDismiss={[Function]}
      visible={false}
    />
  </Styled(Component)>
  <Toaster
    onDismissCallback={[Function]}
  />
</Component>
`;
